---
import { Icon } from 'astro-icon/components'

import DisplaySettings from '@components/widget/DisplaySettings.svelte'
import NavMenuPanel from '@components/widget/NavMenuPanel.astro'
import ThemeSwitcher from '@components/base/header/ThemeSwitcher.svelte'
import Search from '@components/base/header/Search.svelte'
import { LinkPreset, type NavBarLink } from '@/types/config'
import { navBarConfig, siteConfig } from '@/config'
import { LinkPresets } from '@constants/link-presets'
import { url } from '@utils/url-utils'

let links: NavBarLink[] = navBarConfig.links.map(
  (item: NavBarLink | LinkPreset): NavBarLink => {
    if (typeof item === 'number') {
      return LinkPresets[item]
    }
    return item
  },
)
---
<div id="top-row" class="col-span-full z-50 onload-animation">
    <!-- used for onload animation -->
    <!-- <div class="absolute h-8 left-0 right-0 -top-8 bg-[var(--card-bg)] transition"></div>  -->
    <div class="card-base overflow-visible h-full rounded-t-none mx-auto px-4 grid grid-cols-2 lg:grid-cols-[17.5rem_auto_17.5rem]  items-center">
        <div>
            <a href={url('/')} class="inline-flex btn-plain h-[3.25rem] px-5 font-bold rounded-lg active:scale-95">
                <div class="flex flex-row text-[var(--primary)] items-center text-md">
                    {/* @ts-ignore */}
                    <Icon name="fa6-solid:house-chimney" size={"1.25rem"} class="mb-1 mr-2" />
                     <!-- <div  style="height: 1.75rem; width: 1.75rem" class="mr-2">
                        <Fragment set:html={logo} />
                     </div> -->
                    {siteConfig.title}
                </div>
            </a>
        </div>
        <div class="hidden lg:flex justify-self-center">
            {links.map((l) => {
                return <a aria-label={l.name} href={l.external ? l.url : url(l.url)} target={l.external ? "_blank" : null}
                          class="btn-plain h-11 font-bold px-5 rounded-lg active:scale-95"
                >
                    <div class="flex items-center">
                        {l.name}
                        {/* @ts-ignore */}
                        {l.external && <Icon size="14" name="fa6-solid:arrow-up-right-from-square" class="transition -translate-y-[1px] ml-1 text-black/[0.2] dark:text-white/[0.2]"></Icon>}
                    </div>
                </a>;
            })}
        </div>
        <div class="flex justify-self-end">
            <!--<SearchPanel client:load>-->
            <div>
                <Search client:load>
                    {/* @ts-ignore */}
                    <Icon slot="search-icon" name="material-symbols:search" size={"1.25rem"} class="absolute pointer-events-none ml-3 transition my-auto text-black/30 dark:text-white/30"></Icon>
                    <!--<Icon slot="arrow-icon" name="material-symbols:chevron-right-rounded" size={"1.25rem"} class="transition my-auto text-[var(&#45;&#45;primary)]"></Icon>-->
                    {/* @ts-ignore */}
                    <Icon slot="arrow-icon" name="fa6-solid:chevron-right" size={"0.75rem"} class="transition translate-x-0.5 my-auto text-[var(--primary)]"></Icon>
                    {/* @ts-ignore */}
                    <Icon slot="search-switch" name="material-symbols:search" size={"1.25rem"}></Icon>
                </Search>
            </div>
            <div class="flex">
                {!siteConfig.themeColor.fixed && (
                    <button aria-label="Display Settings" class="btn-plain h-11 w-11 rounded-lg active:scale-90" id="display-settings-switch">
                        {/* @ts-ignore */}
                        <Icon name="material-symbols:palette-outline" size={"1.25rem"}></Icon>
                    </button>
                )}
                <ThemeSwitcher client:load></ThemeSwitcher>
                <button aria-label="Menu" name="Nav Menu" class="btn-plain w-11 h-11 rounded-lg active:scale-90 lg:hidden" id="nav-menu-switch">
                    {/* @ts-ignore */}
                    <Icon name="material-symbols:menu-rounded" size={"1.25rem"}></Icon>
                </button>
            </div>
        </div>
        <NavMenuPanel links={links}></NavMenuPanel>
        <DisplaySettings client:only="svelte">
            {/* @ts-ignore */}
            <Icon slot="restore-icon" name="fa6-solid:arrow-rotate-left" size={"0.875rem"} class=""></Icon>
        </DisplaySettings>
    </div>
</div>


<script>

function switchTheme() {
    if (localStorage.theme === 'dark') {
        document.documentElement.classList.remove('dark');
        localStorage.theme = 'light';
    } else {
        document.documentElement.classList.add('dark');
        localStorage.theme = 'dark';
    }
}

function loadButtonScript() {
    let switchBtn = document.getElementById("scheme-switch");
    switchBtn?.addEventListener("click", function () {
        switchTheme()
    });

    let settingBtn = document.getElementById("display-settings-switch");
    settingBtn?.addEventListener("click", function () {
            let settingPanel = document.getElementById("display-setting");
            settingPanel?.classList.toggle("float-panel-closed");
        });

    let menuBtn = document.getElementById("nav-menu-switch");
    menuBtn?.addEventListener("click", function () {
        let menuPanel = document.getElementById("nav-menu-panel");
        menuPanel?.classList.toggle("float-panel-closed");
    });
}

loadButtonScript();

document.addEventListener('astro:after-swap', () => {
    loadButtonScript();
}, { once: false });
</script>

{<script is:inline define:vars={{scriptUrl: url('/pagefind/pagefind.js')}}>
async function loadPagefind() {
    const pagefind = await import(scriptUrl);
    await pagefind.options({
        'excerptLength': 20
        })
    pagefind.init()
    window.pagefind = pagefind
}
loadPagefind()
</script>}