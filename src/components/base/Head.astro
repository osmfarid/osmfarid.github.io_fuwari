---
import { profileConfig, siteConfig } from '@/config'
import { defaultFavicons } from '@constants/icon'
import type { Favicon } from '@/types/config'
import { url } from '@utils/url-utils'
import {
  LIGHT_MODE,
  DARK_MODE,
  AUTO_MODE,
  DEFAULT_THEME,
} from '@constants/constants'
import GoatCounter from '@components/misc/GoatCounter.astro'



interface Props {
  title?: string
  description?: string
}


let { title, description } = Astro.props

const favicons: Favicon[] =
  siteConfig.favicon.length > 0 ? siteConfig.favicon : defaultFavicons

let pageTitle = title ? `${title} - ${siteConfig.title}` : `${siteConfig.title} - ${siteConfig.subtitle}`
---
<head>
    <title>{pageTitle}</title>

    <meta charset="UTF-8" />
    <meta name="description" content={description || pageTitle}>
    <meta name="author" content={profileConfig.name}>

    <meta property="og:site_name" content={siteConfig.title}>
    <meta property="og:url" content={Astro.url}>
    <meta property="og:title" content={title}>
    <meta property="og:description" content={description || pageTitle}>

    <meta name="twitter:card" content="summary_large_image">
    <meta property="twitter:url" content={Astro.url}>
    <meta name="twitter:title" content={pageTitle}>
    <meta name="twitter:description" content={description || pageTitle}>

    <meta name="viewport" content="width=device-width" />

    <meta name="generator" content={Astro.generator} />
    {favicons.map(favicon => (
        <link rel="icon"
              href={favicon.src.startsWith('/') ? url(favicon.src) : favicon.src}
              sizes={favicon.sizes}
              media={favicon.theme && `(prefers-color-scheme: ${favicon.theme})`}
        />
    ))}
    <!-- Set the theme before the page is rendered to avoid a flash -->
    <script is:inline define:vars={{DEFAULT_THEME: DEFAULT_THEME, LIGHT_MODE: LIGHT_MODE, DARK_MODE: DARK_MODE, AUTO_MODE: AUTO_MODE}}>
        const theme = localStorage.getItem('theme') || DEFAULT_THEME;
        switch (theme) {
            case LIGHT_MODE:
                document.documentElement.classList.remove('dark');
                break
            case DARK_MODE:
                document.documentElement.classList.add('dark');
                break
            case AUTO_MODE:
                if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                    document.documentElement.classList.add('dark');
                } else {
                    document.documentElement.classList.remove('dark');
                }
        }
    </script>
    {import.meta.env.PROD && <GoatCounter/>}
    <!-- <slot name="head"></slot> -->

    <link rel="stylesheet" href="https://cdn.staticfile.org/KaTeX/0.16.9/katex.min.css" integrity="sha384-n8MVd4RsNIU0tAv4ct0nTaAbDJwPJzDEaqSD1odI+WdtXRGWt2kTvGFasHpSy3SV" crossorigin="anonymous">

    <link rel="alternate" type="application/rss+xml" title={profileConfig.name} href={`${Astro.site}rss.xml`}/>

    <!-- defines global css variables. This will be applied to <html> <body> and some other elements idk why -->
</head>